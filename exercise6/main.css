body {
    background-color: #fcfcfc;
    height: 100%;
    place-items: center;
}

nav{
    display: block;
    position: fixed;
    top: 0;
    left: 25px;
    margin-bottom: 12px;
    width: 100%;
    gap: 4px;
}

p {
    font-family: 'Inconsolata', monospace;
    font-size: 18px;
    line-height: 24px;
}

a {
    color: #617ecc;
}

a:hover {
    color: rgb(58, 84, 157);
}

#grid-container {
    display: grid;
    margin: 12px;
    grid-template-columns: repeat(4, 200px);
    grid-template-rows: repeat(3, 250px);
    gap: 10px;
    transform-style: preserve-3d;
    z-index: 0;
}

.door-frame {
    width:200px;
    height: 225px;
    display: flex;
    position: relative;
    z-index: 8;
    perspective: 2000px;
}

.grid-item{
    background-color: rgb(28, 28, 28);
    width: 200px;
    position: relative; 
    height: 230px;
    display: flex;
    align-items: center;
    padding: 10px;
    justify-content: flex-end;
    transition: transform 0.5s ease-in-out;
    transform-origin: left center;
    z-index: 5;
}

.doorknob {
    display: block;
    background-color:rgb(71, 71, 71);
    width: 18px;
    height: 18px;
    padding: 4px;
    border-radius: 50%;
    transition: transform 0.5s ease-in-out;
}

.highlight {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background-color:rgb(152, 152, 152);
}

.doorknob:hover {
   transform: rotate(300deg);
}


.grid-item.open{
    transform: rotateY(-100deg);
    background-color: rgb(0, 0, 0);
    z-index: 9000;
}

.animated-design {
    display: block;
    position: absolute;
    z-index: 1;
    /* transition: transform 0.5s ease-in-out; */
}


.bottom-door {
    z-index: 0;
}

#special-door {
    transition: transform 0.5s ease-in-out;
    position: relative; /* critical for positioning the falling circles */
   overflow: visible;  
   z-index: 250;
}

#special-doorframe {
  position: relative; /* critical for positioning the falling circles */
  overflow: visible;  /* allow circles to spill out */
  width: 200px;
  height: 300px;
  /* z-index: 300; */
}


i {
  width: 6px;
  height: 6px;
  scale: var(--scale);
  position: absolute;
  border-radius: 50%;
  background: var(--random-color);
  pointer-events: none;
  animation: animate 1.5s ease-out forwards;
  z-index: 1000;
}

@keyframes animate {
  0%
  {
    opacity: 1;
    transform: translate(0,0);
  }
  100%
  {
    opacity: 0;
    transform: translate(var(--x), var(--y));
  }
}

.cursor {
  pointer-events: none; /* Needed to prevent our cursor from becoming the unintended target of our mouse events */
  position: fixed; /* Required for setting inset values */
  height: 20px;
  width: 20px;
  border-radius: 32px;
  background-color: light-dark(rgb(255, 228, 52), white);
  transform: translate(-50%, -50%); /* Centers circle to cursor location */
  transform-origin: top left;
  z-index: 1000;
}